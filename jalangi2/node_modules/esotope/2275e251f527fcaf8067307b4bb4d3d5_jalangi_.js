J$.iids = {"9":[3,16,6,6],"10":[26,17,26,37],"17":[3,16,6,6],"18":[28,25,28,50],"25":[10,21,10,34],"33":[10,9,10,35],"35":[10,9,10,20],"41":[8,21,11,6],"49":[8,21,11,6],"57":[8,21,11,6],"65":[15,21,15,36],"67":[15,21,15,34],"73":[15,9,15,37],"75":[15,9,15,20],"81":[14,21,16,6],"89":[14,21,16,6],"97":[14,21,16,6],"105":[19,9,19,53],"107":[19,9,19,20],"113":[18,34,20,6],"121":[18,34,20,6],"129":[25,9,25,29],"137":[25,9,25,41],"145":[26,17,26,32],"153":[27,17,27,28],"161":[27,33,27,46],"169":[28,26,28,40],"177":[28,26,28,50],"185":[28,54,28,92],"187":[28,54,28,87],"193":[29,25,29,64],"195":[29,25,29,59],"201":[27,48,31,18],"209":[27,48,31,18],"217":[27,48,31,18],"225":[27,48,31,29],"227":[27,48,31,23],"233":[27,17,31,30],"235":[27,17,27,32],"241":[25,54,33,10],"249":[25,54,33,10],"257":[25,54,33,10],"265":[25,54,33,21],"267":[25,54,33,15],"273":[25,9,33,22],"275":[25,9,25,53],"281":[24,10,34,6],"289":[24,10,34,6],"297":[40,5,40,22],"299":[40,5,40,16],"305":[39,1,41,2],"313":[39,1,41,2],"321":[39,1,41,2],"329":[44,16,44,26],"337":[44,16,44,26],"345":[45,5,45,15],"353":[43,1,46,2],"361":[43,1,46,2],"369":[43,1,46,2],"377":[49,12,49,13],"385":[48,1,50,2],"393":[48,1,50,2],"401":[48,1,50,2],"409":[52,12,52,13],"417":[53,1,53,12],"425":[54,1,54,18],"427":[54,1,54,12],"433":[1,1,58,1],"441":[1,1,58,1],"449":[1,1,58,1],"457":[1,1,58,1],"465":[1,1,58,1],"473":[3,16,6,6],"481":[3,16,6,6],"489":[8,21,11,6],"497":[8,21,11,6],"505":[14,21,16,6],"513":[14,21,16,6],"521":[18,34,20,6],"529":[18,34,20,6],"537":[27,48,31,18],"545":[27,48,31,18],"553":[25,54,33,10],"561":[25,54,33,10],"569":[24,10,34,6],"577":[24,10,34,6],"585":[39,1,41,2],"593":[39,1,41,2],"601":[43,1,46,2],"609":[43,1,46,2],"617":[48,1,50,2],"625":[48,1,50,2],"633":[1,1,58,1],"641":[1,1,58,1],"nBranches":0,"originalCodeFileName":"2275e251f527fcaf8067307b4bb4d3d5.js","instrumentedCodeFileName":"2275e251f527fcaf8067307b4bb4d3d5_jalangi_.js","code":"\nclass RealTimeStrategy {\n    constructor() {\n        //arguments.callee;\n        constructor;\n    }\n\n    static show_dict(dict) {\n        show_dict;\n        console.log(dict.toString);\n    }\n\n\n    static show_list(list) {\n        console.log(list.toString());\n    }\n\n    _injectRealTimeRulesRetriever() {\n        console.log(\"_injectRealTimeRulesRetriever\");\n    }\n\n\n\n    start() {\n        chrome.webNavigation.onCompleted.addListener(function (details) {\n            if (details.frameId == 0) {\n                chrome.tabs.get(details.tabId, function (tab) {\n                    if (!chrome.runtime.lastError && this._isSuitableRealTimeInjection(tab)) {\n                        this._injectRealTimeRulesRetriever(tab);\n                    }\n                }.bind(this));\n            }\n        }.bind(this));\n    }\n}\n\n//var realTimeStrategy = new RealTimeStrategy();\n\nfunction test(arg1){\n    console.log(arg1);\n}\n\nfunction test1(){\n    var list = [\"a\", \"b\"];\n    test(list);\n}\n\nfunction test2(arg1){\n    arg1 = 4;\n}\n\nvar arg1 = 1;\ntest2(arg1);\nconsole.log(arg1);\n\n\n\n"};
jalangiLabel10:
    while (true) {
        try {
            J$.Se(433, '2275e251f527fcaf8067307b4bb4d3d5_jalangi_.js', '2275e251f527fcaf8067307b4bb4d3d5.js');
            function test(arg1) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(305, arguments.callee, this, arguments);
                            J$.N(313, 'arguments', arguments, 4);
                            arg1 = J$.N(321, 'arg1', arg1, 4);
                            J$.M(297, console, 'log', 0)(arg1);
                        } catch (J$e) {
                            J$.Ex(585, J$e);
                        } finally {
                            if (J$.Fr(593))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function test1() {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(353, arguments.callee, this, arguments);
                            J$.N(361, 'arguments', arguments, 4);
                            J$.N(369, 'list', list, 0);
                            var list = J$.W(337, 'list', (function(){var yiruma_temp = [];J$.M(329 , yiruma_temp, 'push', 0)('a');J$.M(329 , yiruma_temp, 'push', 0)('b');return yiruma_temp;})(), list, 1);
                            J$.F(345, test, 0)(list);
                        } catch (J$e) {
                            J$.Ex(601, J$e);
                        } finally {
                            if (J$.Fr(609))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function test2(arg1) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(385, arguments.callee, this, arguments);
                            J$.N(393, 'arguments', arguments, 4);
                            arg1 = J$.N(401, 'arg1', arg1, 4);
                            arg1 = J$.W(377, 'arg1', 4, arg1, 0);
                        } catch (J$e) {
                            J$.Ex(617, J$e);
                        } finally {
                            if (J$.Fr(625))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            test = J$.N(441, 'test', test, 0);
            test1 = J$.N(449, 'test1', test1, 0);
            test2 = J$.N(457, 'test2', test2, 0);
            J$.N(465, 'arg1', arg1, 0);
            class RealTimeStrategy {
                constructor() {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.N(17, 'arguments', arguments, 4);
                                constructor;
                            } catch (J$e) {
                                J$.Ex(473, J$e);
                            } finally {
                                if (J$.Fr(481))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }
                static show_dict(dict) {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.N(49, 'arguments', arguments, 4);
                                dict = J$.N(57, 'dict', dict, 4);
                                show_dict;
                                J$.M(33, console, 'log', 0)(J$.G(25, dict, 'toString', 0));
                            } catch (J$e) {
                                J$.Ex(489, J$e);
                            } finally {
                                if (J$.Fr(497))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }
                static show_list(list) {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.N(89, 'arguments', arguments, 4);
                                list = J$.N(97, 'list', list, 4);
                                J$.M(73, console, 'log', 0)(J$.M(65, list, 'toString', 0)());
                            } catch (J$e) {
                                J$.Ex(505, J$e);
                            } finally {
                                if (J$.Fr(513))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }
                _injectRealTimeRulesRetriever() {
                    jalangiLabel3:
                        while (true) {
                            try {
                                J$.N(121, 'arguments', arguments, 4);
                                J$.M(105, console, 'log', 0)('_injectRealTimeRulesRetriever');
                            } catch (J$e) {
                                J$.Ex(521, J$e);
                            } finally {
                                if (J$.Fr(529))
                                    continue jalangiLabel3;
                                else
                                    return J$.Ra();
                            }
                        }
                }
                start() {
                    jalangiLabel6:
                        while (true) {
                            try {
                                J$.N(289, 'arguments', arguments, 4);
                                J$.M(273, J$.G(137, J$.G(129, chrome, 'webNavigation', 0), 'onCompleted', 0), 'addListener', 0)(J$.M(265, function (details) {
                                    jalangiLabel5:
                                        while (true) {
                                            try {
                                                J$.N(249, 'arguments', arguments, 4);
                                                details = J$.N(257, 'details', details, 4);
                                                if (J$.B(10, '==', J$.G(145, details, 'frameId', 0), 0, 0)) {
                                                    J$.M(233, J$.G(153, chrome, 'tabs', 0), 'get', 0)(J$.G(161, details, 'tabId', 0), J$.M(225, function (tab) {
                                                        jalangiLabel4:
                                                            while (true) {
                                                                try {
                                                                    J$.N(209, 'arguments', arguments, 4);
                                                                    tab = J$.N(217, 'tab', tab, 4);
                                                                    if (J$.U(18, '!', J$.G(177, J$.G(169, chrome, 'runtime', 0), 'lastError', 0)) && J$.M(185, this, '_isSuitableRealTimeInjection', 0)(tab)) {
                                                                        J$.M(193, this, '_injectRealTimeRulesRetriever', 0)(tab);
                                                                    }
                                                                } catch (J$e) {
                                                                    J$.Ex(537, J$e);
                                                                } finally {
                                                                    if (J$.Fr(545))
                                                                        continue jalangiLabel4;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 'bind', 0)(this));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(553, J$e);
                                            } finally {
                                                if (J$.Fr(561))
                                                    continue jalangiLabel5;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 'bind', 0)(this));
                            } catch (J$e) {
                                J$.Ex(569, J$e);
                            } finally {
                                if (J$.Fr(577))
                                    continue jalangiLabel6;
                                else
                                    return J$.Ra();
                            }
                        }
                }
            }
            var arg1 = J$.W(409, 'arg1', 1, arg1, 3);
            J$.F(417, test2, 0)(arg1);
            J$.M(425, console, 'log', 0)(arg1);
        } catch (J$e) {
            J$.Ex(633, J$e);
        } finally {
            if (J$.Sr(641)) {
                J$.L();
                continue jalangiLabel10;
            } else {
                J$.L();
                break jalangiLabel10;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
